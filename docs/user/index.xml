<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>User Guides on DraNet</title><link>https://dranet.dev/docs/user/</link><description>Recent content in User Guides on DraNet</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 27 May 2025 11:30:40 +0000</lastBuildDate><atom:link href="https://dranet.dev/docs/user/index.xml" rel="self" type="application/rss+xml"/><item><title>MPI Operator on GKE</title><link>https://dranet.dev/docs/user/mpi-operator/</link><pubDate>Tue, 27 May 2025 11:30:40 +0000</pubDate><guid>https://dranet.dev/docs/user/mpi-operator/</guid><description>Running distributed applications, such as those using the Message Passing Interface (MPI) or NVIDIA&amp;rsquo;s Collective Communications Library (NCCL) for GPU communication, often requires each participating process (or Pod, in Kubernetes terms) to have access to high-speed, low-latency interconnects. Simply sharing a generic network interface among many high-performance jobs can lead to contention, unpredictable performance, and underutilization of expensive hardware.
The goal is resource compartmentalization: ensuring that each part of your distributed job gets dedicated access to the specific resources it needs â€“ for instance, one GPU and one dedicated RDMA-capable NIC per worker.</description></item><item><title>Interface Configuration</title><link>https://dranet.dev/docs/user/interface-configuration/</link><pubDate>Sun, 25 May 2025 11:30:40 +0000</pubDate><guid>https://dranet.dev/docs/user/interface-configuration/</guid><description>To configure network interfaces in DraNet, users can provide custom configurations through the parameters field of a ResourceClaim or ResourceClaimTemplate. This configuration adheres to the NetworkConfig structure, which defines the desired state for network interfaces and their associated routes.
Network Configuration Overview The primary structure for custom network configuration is NetworkConfig. It encompasses settings for the network interface itself and any specific routes to be applied within the Pod&amp;rsquo;s network namespace.</description></item></channel></rss>